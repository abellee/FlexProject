<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright (c) 2007-2011 flexlib contributors.
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in
  ~ all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~ THE SOFTWARE.
  -->
<componentPackage>
    <component id="PromptingTextInput" class="flexlib.controls.PromptingTextInput" />
    <component id="PromptingTextArea" class="flexlib.controls.PromptingTextArea" />
    <component id="FlowBox" class="flexlib.containers.FlowBox" />
    <component id="HorizontalAxisDataSelector" class="flexlib.charts.HorizontalAxisDataSelector" />
    <component id="SuperTabBar" class="flexlib.controls.SuperTabBar" />
    <component id="TabPopUpButtonSkin" class="flexlib.skins.TabPopUpButtonSkin" />
    <component id="SuperTabNavigator" class="flexlib.containers.SuperTabNavigator" />
    <component id="ButtonScrollingCanvas" class="flexlib.containers.ButtonScrollingCanvas" />
    <component id="DragScrollingCanvas" class="flexlib.containers.DragScrollingCanvas" />
    <component id="ScrollableMenuBar" class="flexlib.controls.ScrollableMenuBar" />
    <component id="ScrollablePopUpMenuButton" class="flexlib.controls.ScrollablePopUpMenuButton" />
    <component id="HAccordion" class="flexlib.containers.HAccordion" />
    <component id="VAccordion" class="flexlib.containers.VAccordion" />
    <component id="VerticalMenuBar" class="flexlib.controls.VerticalMenuBar" />
    <component id="HSlider" class="flexlib.controls.HSlider" />
    <component id="VSlider" class="flexlib.controls.VSlider" />
    <component id="ConvertibleTreeList" class="flexlib.controls.ConvertibleTreeList" />
    <component id="ImageMap" class="flexlib.controls.ImageMap" />
    <component id="area" class="flexlib.controls.area" />
    <component id="Fire" class="flexlib.controls.Fire" />
    <component id="CanvasButton" class="flexlib.controls.CanvasButton" />
    <component id="CanvasButtonAccordionHeader" class="flexlib.containers.accordionClasses.CanvasButtonAccordionHeader" />
    <component id="SliderSkin" class="flexlib.skins.SliderSkin" />
    <component id="SliderHighlightSkin" class="flexlib.skins.SliderHighlightSkin" />
    <component id="SliderThumbHighlightSkin" class="flexlib.skins.SliderThumbHighlightSkin" />
    <component id="SliderThumbNoGripHighlightSkin" class="flexlib.skins.SliderThumbNoGripHighlightSkin" />
    <component id="AdvancedForm" class="flexlib.containers.AdvancedForm" />
    <component id="TreeGrid" class="flexlib.controls.TreeGrid" />
    <component id="TreeGridColumn" class="flexlib.controls.treeGridClasses.TreeGridColumn" />
    <component id="DockableToolBar" class="flexlib.containers.DockableToolBar" />
    <component id="Docker" class="flexlib.containers.Docker" />
    <component id="FlowContainer" class="flexlib.containers.FlowContainer" />
    <component id="EnhancedButtonSkin" class="flexlib.skins.EnhancedButtonSkin" />
    <component id="Base64Image" class="flexlib.controls.Base64Image" />
    <component id="Highlighter" class="flexlib.controls.Highlighter" />
    <component id="DraggablePie" class="flexlib.charts.DraggablePie" />
    <component id="ScheduleViewer" class="flexlib.scheduling.ScheduleViewer" />
    <component id="Timeline" class="flexlib.scheduling.Timeline" />
    <component id="ScheduleData" class="flexlib.scheduling.samples.ScheduleData" />
    <component id="ColoredSolidScheduleEntryRenderer" class="flexlib.scheduling.scheduleClasses.renderers.ColoredSolidScheduleEntryRenderer" />
    <component id="ColoredGradientScheduleEntryRenderer" class="flexlib.scheduling.scheduleClasses.renderers.ColoredGradientScheduleEntryRenderer" />
    <component id="GradientScheduleEntryRenderer" class="flexlib.scheduling.scheduleClasses.renderers.GradientScheduleEntryRenderer" />
    <component id="SolidScheduleEntryRenderer" class="flexlib.scheduling.scheduleClasses.renderers.SolidScheduleEntryRenderer" />
    <component id="SimpleLayout" class="flexlib.scheduling.scheduleClasses.layout.SimpleLayout" />
    <component id="AlternatingHorizontalLinesViewer" class="flexlib.scheduling.samples.AlternatingHorizontalLinesViewer" />
    <component id="SolidVerticalLinesViewer" class="flexlib.scheduling.samples.SolidVerticalLinesViewer" />
    <component id="IconLoader" class="flexlib.controls.IconLoader" />
    <component id="WindowShade" class="flexlib.containers.WindowShade" />
    <component id="MDIWindow" class="flexlib.mdi.containers.MDIWindow" />
    <component id="MDICanvas" class="flexlib.mdi.containers.MDICanvas" />
    <component id="MDIVistaEffects" class="flexlib.mdi.effects.effectsLib.MDIVistaEffects" />
    <component id="MDILinearEffects" class="flexlib.mdi.effects.effectsLib.MDILinearEffects" />
    <component id="MDIRelationalEffects" class="flexlib.mdi.effects.effectsLib.MDIRelationalEffects" />
    <component id="CSSPropertyInjector" class="flexlib.css.CSSPropertyInjector" />
</componentPackage>
